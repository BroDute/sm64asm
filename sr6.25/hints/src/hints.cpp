#include "hints.h"

#include <sm64.h>

// Hints for stars 7 & 8
u8 coinsStr[] = { 0x08, 0x00, 0x9E, 0x0C, 0x18, 0x12, 0x17, 0x1C, 0xFF };
u8 boxStr[] = { 0x1D, 0x11, 0x0E, 0x9E, 0x22, 0x0E, 0x15, 0x15, 0x18, 0x20, 0x9E, 0x0B, 0x18, 0x21, 0xFF };
u8 inaccessibleStr[] = { 0xF2, 0xF2, 0xF2, 0x9E, 0x17, 0x18, 0x1D, 0x9E, 0x0A, 0x0C, 0x0C, 0x0E, 0x1C, 0x1C, 0x12, 0x0B, 0x15, 0x0E, 0x9E, 0xF2, 0xF2, 0xF2, 0xFF };
u8 c880Str[] = { 0x1B, 0x0E, 0x0D, 0x1C, 0x9E, 0x18, 0x0F, 0x9E, 0x1D, 0x11, 0x0E, 0x9E, 0x1C, 0x20, 0x0E, 0x0E, 0x1D, 0x9E, 0x15, 0x0A, 0x17, 0x0D, 0xFF };
u8 b380Str[] = { 0x0B, 0x0E, 0x0A, 0x1D, 0x9E, 0x0B, 0x18, 0x20, 0x1C, 0x0E, 0x1B, 0x9E, 0x0F, 0x18, 0x1B, 0x9E, 0x16, 0x0E, 0xF2, 0xFF };
u8 vc80Str[] = { 0x1B, 0x0E, 0x0D, 0x1C, 0x9E, 0x18, 0x0F, 0x9E, 0x1D, 0x11, 0x0E, 0x9E, 0x1C, 0x14, 0x12, 0x0E, 0x1C, 0xFF };

u8 c14BoxStr[] = { 0x1A, 0x1E, 0x12, 0x0C, 0x14, 0x9E, 0x1D, 0x1B, 0x12, 0x19, 0x9E, 0x0D, 0x18, 0x20, 0x17, 0x9E, 0x20, 0x12, 0x1D, 0x11, 0x9E, 0x1F, 0x0A, 0x17, 0x12, 0x1C, 0x11, 0x9E, 0x9F, 0x1F, 0x0C, 0x9F, 0xFF };
u8 c15BoxStr[] = { 0x17, 0x18, 0x1D, 0x9E, 0x10, 0x18, 0x17, 0x17, 0x0A, 0x9E, 0x1A, 0x1E, 0x0E, 0x1C, 0x1D, 0x12, 0x18, 0x17, 0x9E, 0x1D, 0x11, 0x0E, 0x9E, 0x0F, 0x15, 0x18, 0x20, 0x9E, 0x9F, 0x16, 0x0C, 0x9F, 0xFF };

u8 slide1Str[] = { 0x1B, 0x0E, 0x1F, 0x0E, 0x1B, 0x1C, 0x0E, 0x9E, 0x1C, 0x15, 0x12, 0x0D, 0x0E, 0x9E, 0x1C, 0x1D, 0x0A, 0x1B, 0x9E, 0x01, 0xFF };
u8 slide2Str[] = { 0x1B, 0x0E, 0x1F, 0x0E, 0x1B, 0x1C, 0x0E, 0x9E, 0x1C, 0x15, 0x12, 0x0D, 0x0E, 0x9E, 0x1C, 0x1D, 0x0A, 0x1B, 0x9E, 0x02, 0xFF };

u8 oldSiteBoxStr[] = { 0x1D, 0x11, 0x0E, 0x9E, 0x0E, 0x17, 0x0D, 0x9E, 0x12, 0x1C, 0x9E, 0x13, 0x1E, 0x1C, 0x1D, 0x9E, 0x1D, 0x11, 0x0E, 0x9E, 0x1C, 0x1D, 0x0A, 0x1B, 0x1D, 0xFF };

#define HINT_SIZE 64
#define COURSE_HINT_SIZE (HINT_SIZE * 6)

int HintsFromSegmented(int segptr)
{
    if (gCurrCourseNum <= 15 && gCurrHintAct <= 6)
        goto fini;

    if (gCurrHintAct == 7)
    {
        if (gCurrCourseNum == 14)
            return (int) c14BoxStr;
        if (gCurrCourseNum == 15)
            return (int) c15BoxStr;
        if (gCurrCourseNum == 19)
            return (int) oldSiteBoxStr;
        if (gCurrCourseNum == 23)
            return (int) slide1Str;

        return (int)boxStr;
    }
    if (gCurrHintAct == 8)
    {
        if (gCurrCourseNum == 1)
            return (int) inaccessibleStr;
        if (gCurrCourseNum == 8)
            return (int) c880Str;
        if (gCurrCourseNum == 18)
            return (int) b380Str;
        if (gCurrCourseNum == 22)
            return (int) vc80Str;
        if (gCurrCourseNum == 23)
            return (int) slide2Str;

        return (int)coinsStr;
    }

    segptr = 0x04036000 + (gCurrCourseNum - 16) * COURSE_HINT_SIZE + (gCurrHintAct - 1) * HINT_SIZE;

fini:
    return SegmentedToVirtual(segptr);
}